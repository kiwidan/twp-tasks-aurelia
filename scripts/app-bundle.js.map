{"version":3,"sources":["src/app.ts","src/env.ts","src/environment.ts","src/main.ts","/Users/paddy/code/aurelia/twp-tasks/src/task.js","src/resources/index.ts"],"names":[],"mappings":";;;IAiBA;QAGE;QAAgB,CAAC;QAEjB,sBAAQ,GAAR;YAAA,iBAyBC;YAxBC,IAAM,MAAM,GAAG,IAAI,iCAAU,EAAE,CAAC;YAChC,IAAM,GAAG,GAAG,aAAW,aAAG,CAAC,OAAO,+BAA0B,aAAG,CAAC,SAAS,+BAA4B,CAAC;YAEtG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;gBACd,OAAO,EAAE;oBACP,QAAQ,EAAE,kBAAkB;oBAC5B,eAAe,EAAE,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,aAAG,CAAC,GAAG,GAAG,MAAM,CAAC;iBAC1D;aACF,CAAC;iBACD,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;iBACjC,IAAI,CAAC,UAAC,QAA4B;gBACjC,IAAM,MAAM,GAAG,EAAE,CAAC;gBAElB,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ;oBAC7B,MAAM,CAAC,IAAI,CAAC;wBACV,EAAE,EAAE,QAAQ,CAAC,EAAE;wBACf,IAAI,EAAE,QAAQ,CAAC,IAAI;qBACpB,CAAC,CAAA;gBACJ,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBAErB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC;QACH,UAAC;IAAD,CA/BA,AA+BC,IAAA;IA/BY,kBAAG;;;;;;;;ICjBhB,IAAM,GAAG,GAAG;QACR,OAAO,EAAE,YAAY;QACrB,GAAG,EAAE,YAAY;QACjB,SAAS,EAAE,QAAQ;KACtB,CAAC;IAEF,kBAAe,GAAG,CAAC;;;;;;;;ICNnB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;ICAF,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;ACjBD;AACA;AACA;AACA;;;;ICDA,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\nimport env from './env';\n\ninterface ITasklist {\n  id: number;\n  name: string;\n}\n\ninterface ITasklistsResponse extends Response {\n  tasklists: ITasklist[];\n}\n\ninterface IKanban {\n  boards: ITasklist[];\n}\n\nexport class App implements IKanban {\n  boards;\n\n  constructor() { }\n\n  activate() {\n    const client = new HttpClient();\n    const url = `https://${env.company}.teamwork.com/projects/${env.projectId}/tasklists.json?status=all`;\n\n    client.fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': \"BASIC \" + window.btoa(env.key + ':xxx')\n        }\n      })\n      .then(response => response.json())\n      .then((response: ITasklistsResponse) => {\n        const boards = [];\n\n        response.tasklists.map(tasklist => {\n          boards.push({\n            id: tasklist.id,\n            name: tasklist.name\n          })\n        });\n\n        this.boards = boards;\n\n        console.log(this.boards);\n      });\n  }\n}\n","const env = {\n    company: 'paddymoran',\n    key: 'cup420ears',\n    projectId: '266471'\n};\n\nexport default env;\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n",null,"import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}