{"version":3,"sources":["src/app.ts","src/env.ts","src/environment.ts","src/main.ts","src/task.ts","src/resources/index.ts","src/tasklist.ts","src/kanban.ts","src/board.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n}\n","const env = {\n    company: 'paddymoran',\n    key: 'cup420ears',\n    projectId: '266471'\n};\n\nexport default env;\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {HttpClient} from 'aurelia-fetch-client';\nimport env from './env';\n\nlet client = new HttpClient();\n\nexport default class Task {\n  id;\n  description;\n  completed;\n\n  constructor(id: number, description: string, completed: boolean = false) {\n    this.id = id;\n    this.description = description;\n    this.completed = completed;\n  }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export default class Tasklist {\n    id: number;\n    name: string;\n\n    constructor(id: number, name: string) {\n        this.id = id;\n        this.name = name;\n    }\n}","import {HttpClient} from 'aurelia-fetch-client';\nimport env from './env';\nimport Board from './board';\n\n\ninterface ITasklistsResponse extends Response {\n  tasklists: Board[];\n}\n\nexport class Kanban {\n  boards: Board[];\n\n  constructor() {\n    const client = new HttpClient();\n    const url = `https://${env.company}.teamwork.com/projects/${env.projectId}/tasklists.json?status=all`;\n\n    client.fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': \"BASIC \" + window.btoa(env.key + ':xxx')\n        }\n      })\n      .then(response => response.json())\n      .then((response: ITasklistsResponse) => {\n        const boards: Board[] = [];\n\n        response.tasklists.map(tasklist => {\n          boards.push(\n            new Board(tasklist.id, tasklist.name)\n          );\n        });\n\n        this.boards = boards;\n\n        console.log(this.boards);\n      });\n  }\n}","import {HttpClient} from 'aurelia-fetch-client';\nimport Task from './task';\nimport env from './env';\n\nexport default class Board {\n  id: number;\n  name: string;\n  tasks: Task[];\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n\n    // Go get tasks\n    const client = new HttpClient();\n\n    client.fetch(`https://${env.company}.teamwork.com/tasklists/${this.id}/tasks.json?includeCompletedTasks=true`, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': \"BASIC \" + window.btoa(env.key + ':xxx')\n        }\n      })\n      .then(response => response.json())\n      .then((response) => {\n        const tasks: Task[] = [];\n\n        response['todo-items'].map(task => {\n          tasks.push(new Task(task.id, task.content, task.completed));\n        });\n\n        this.tasks = tasks;\n      });\n  }\n}"],"sourceRoot":".."}